spring.application.name=D-TECT
spring.config.import=optional:file:./D-TECT/secrets.properties

# properties key = value

server.port = 8081
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://project-db-campus.smhrd.com:3307/campus_25SW_LI_p3_4?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username = campus_25SW_LI_p3_4
spring.datasource.password = smhrd4

spring.jpa.hibernate.ddl-auto = update
spring.jpa.database-platform = org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql = true

# 파일 업로드 설정
spring.servlet.multipart.enabled = true

# 하나의 파일 용량 제한
spring.servlet.multipart.max-file-size = 10MB

# 전체 파일 용량 제한
spring.servlet.multipart.max-request-size = 20MB

file.upload-dir = /uploads

app.aes.secret=pathfinder

# 이메일 연동을 위한 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USERNAME}
spring.mail.password=${GMAIL_SEC_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.test-connection=false

# ===== Google =====
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/authorization/google
spring.security.oauth2.client.registration.google.client-name=Google
# provider는 구글 기본 제공 → 별도 provider.* 설정 불필요

# ===== Kakao (커스텀 Provider) =====
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}  # 없으면 빈값
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8081/login/oauth2/authorization/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

spring.mail.properties.mail.debug=true
logging.level.org.springframework.mail=DEBUG
# (프록시/로드밸런서 뒤에서 baseUrl 계산 오류 날 때 권장)
# server.forward-headers-strategy=native